--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,ba,ba)local ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=97,109,72,43,66,49,49,79,37,11,82,17,39,17,63,41,48,27,67,65,71,38,59,44,36,81,53,96,38,63,22,86,58,95,77,25,28,71,98,98,66,50,44,46,88,40,44,35,16,62 while ba~=76 do if bb>=756 then if bb>=1149 then if bb>=1316 then if bb<=1376 then if bb>=1335 then if bb>1339 then cn={}bb=1418 else bs={}bb=1376 end else bv=function(cp,cq,cq)local cq,cr,cs,ct,cu,cv,cw,cx=48,43,79,13,74,86,39,59,47,30,76,70,96,38,26,17,14,21,26,11,55,37,25,74 while cq~=38 do if cr<=257 then if cr>=177 then if cr>=221 then if cr>229 then cr=296 cv[193]=ct;else cr=257 for cy=1,co()do local cz,da,db,dc,dd,de=80,73,70,10,57,50,18,33,70,76,25,50,63,98,50,17,85,15,33,16,97,44,82,52,22,51 while cz~=45 do if da>=375 then if da<=461 then if da>=424 then if da>427 then de[145]=bh(db,21,29);da=504 else da=461 de[r]=bh(dd,12,33);end else if da>383 then de[132]=bh(db,3,11);da=424 else de[54]=bh(dd,1,11);da=408 end end else if da>=595 then if da<=595 then da=611 de[197]=-de[145]else if da>620 then cz=45;else da=655 ct[cy]=de;end end else if da<543 then de[131]=bh(db,12,20);da=548 else de[149]=-de[132]da=595 end end end else if da>=232 then if da<=259 then if da>236 then db=co()da=280 else if 1==ch()then for r=1,ch()do do de[194][r]={ch()==0,co()}end end end da=259 end else if da<=280 then da=310 dd=co()else if da>316 then do de[146]=dc end da=375 else da=353 dc=bh(db,1,2)end end end else if da>=158 then if da>161 then de[194]={};da=232 else da=189 de[127]=ch();end else if da<111 then db,dc,dd,de=nil da=118 else da=158 de={{},nil,nil}end end end end end end end else if cr>184 then for r=(#br+1),(#br+cx)do local cy,cz,da,db,dc=80,33,20,66,10,35,38,87,60,96,32,49,97,49,98,17,17,94,85,48,52,47 while cy~=41 do if cz>=303 then if cz>=381 then if cz>=446 then if cz>453 then break else cz=468 br[r]=da;end else if cz<406 then cz=408 do da[149]=-da[m]end else cz=446 do da[197]=-da[145]end end end else if cz>=342 then if cz>350 then da[172]=bh(dc,12,33);cz=381 else cz=365 do da[145]=bh(db,21,29);end end else if cz<323 then da[132]=bh(db,3,11);cz=325 else da[110]=bh(db,12,20);cz=342 end end end else if cz>=185 then if cz<=216 then if cz>188 then cz=248 da[131]=ch();else cz=216 dc=co()end else if cz<268 then da[146]=bh(db,1,h);cz=271 else da[54]=bh(dc,1,11);cz=303 end end else if cz>=91 then if cz<127 then do da[127]=ch();end cz=136 else cz=185 db=co()end else if cz>41 then da={}cz=91 else da,db,dc=nil cz=50 end end end end end end cr=221 else do cx=co()end cr=192 end end else if cr<=77 then if cr<72 then cs,ct,cu,cv,cw,cx=nil cr=77 else cr=115 ct={}end else if cr>119 then cr=177 cv={}else cr=151 cu={}end end end else if cr>=435 then if cr>=508 then if cr>=524 then if cr<542 then cr=549 return cv;else cq=38;end else cv[45]=ch();cr=524 end else if cr<456 then for h=1,co()do cu[h-1]=bv();end cr=463 else cr=508 cv[106]=cu;end end else if cr<=338 then if cr>305 then cr=370 cs={}else cw=co()cr=338 end else if cr<388 then cr=395 for h=1,cw do local m,r,cq,ct=63,37,74,83,98,45,74,31,73,20,38,78,45,62 while m~=32 do if r>=136 then if r>=156 then if r<188 then r=197 do cs[h]=cq;end else break end else if(2==ct)then cq=(0~=ch());elseif(1==ct)then cq=ck();elseif(not(ct~=3))then cq=bo();elseif(not(ct~=4))then cq=cp[bo()];end;r=156 end else if r>=67 then if r<96 then r=104 ct=ch()else cq=nil r=136 end else cq,ct=nil r=67 end end end end else cv[140]=cs cr=435 end end end end end end bb=1335 end else if bb<=1418 then cc=function(h,m,r,cp)local cp,cq,cr,cs,ct cq=h[45]do ct=h[140]end cp=bs cr=h[193]do cs=h[106]end return function(...)local h,cp,cu,cv,cw,cx,cy,cz,da do cv=1 end da=-1 cy=-1 cu={}cx={...}h=(bj('#',...)-1)cw={}cp={}for cy=0,h do if(not(cy<cq))then do cu[(cy-cq)]=cx[(cy+1)];end else do cp[cy]=cx[(cy+1)];end end;end;cz=(h-cq+1)while true do local h,cq,cu,cx,cy,cz,db,dc,dd,de dd=cr[cv]de=dd[54]db=dd[127]cy=dd[132]do cq=dd[110]end cz=dd[145]do cu=dd[131]end do dc=dd[149]end h=dd[172]cx=dd[197]if not(de>31)then if not(de>15)then if not(de<8)then if not(de<12)then if not(de<14)then if 14==dd[54]then ct=bs[cy](ct)else do cp[cy]=(cp[h]/ct[cz]);end end else if 12==de then cp[cy]=(cp[h]+cp[dd[145]]);else cr[cv]={[131]=0,[132]=v,[54]=de- -18,[172]=22,[145]=46};do cv=(cv-1);end end end else if not(dd[54]<10)then do if(de<11)then local v,cq,db cq=cs[h]v=nil do db={}end v=bp({},{__index=function(dc,dc)local dc=db[dc];return dc[1][dc[2]];end,__newindex=function(dc,dc,df)local dc=db[dc]dc[1][dc[2]]=df;end;});for dc=1,cz do local df df=dd[194][dc]if df[1]then db[(dc-1)]={cp,df[2],nil,nil,nil};else db[(dc-1)]={m,df[2],nil};end;do cw[(#cw+1)]=db;end end;do cp[dd[132]]=cc(cq,v,r);end else while cp[cy]do cv=h;break end end end else if(de<9)then cp[dd[132]]=r[ct[h]];else cr[cv]={[172]=14,[145]=27,[54]=de- -11,[132]=24,[131]=0};cv=(cv-1);end end end else if not(de<4)then if not(de<6)then do if(de<7)then cr[cv]={[145]=46,[172]=z,[132]=18,[54]=dd[54]- -25,[131]=0};cv=(cv-1);else cp[cy]=cp[h][cp[cz]];end end else if(de<5)then cp[dd[132]][ct[h]]=ct[cz];else cr[cv]={[145]=19,[172]=20,[132]=18,[131]=0,[54]=de- -37};cv=(cv-1);end end else if not(de<2)then if(de<3)then local v v=cy cp[v]=cp[v](ca(cp,v+1,da));else if(cp[dd[145]]~=cp[dd[132]])then cv=h;end;end else if(de>0)then cr[cv]={[172]=9,[54]=dd[54]- -7,[b]=0,[132]=25,[145]=0};do cv=(cv-1);end else do cp[cy]();end end end end end else if not(de>23)then if not(de<20)then if not(de<22)then if(de>22)then cp[cy]=(cp[dd[172]]%ct[cz]);else do cp[dd[t]]=#cp[h];end end else do if(de<21)then cp[dd[132]]=cp[h];else cr[cv]=br[cu];cv=h;end end end else do if not(de<18)then if(de<19)then local b,t b=h do t=cp[b]end for v=(b+1),cz do t=(t..cp[v]);end;cp[cy]=t;else cp[dd[132]]=(cp[h]-cp[cz]);end else if 16==de then local b do b=dd[132]end do cp[b]=cp[b](cp[b+1]);end elseif not cp[cy]then do cv=h;end end end end end else if not(de>27)then if not(de<26)then if(de<27)then if((ct[cy]<cp[cz]))then cv=h;end;else do cp[cx]=(function()cp[dd[132]]=cc(cs[dd[110]],nil,r);end)end end else if 24==de then local b b=cy cp[b](ca(cp,(b+1),h))else local b b=dd[132]cp[b]=cp[b]();end end else do if not(dd[54]>29)then if not(de~=28)then cv=h;else cr[cv]={[131]=0,[54]=dd[54]- -4,[132]=12,[145]=2,[172]=o};cv=(cv-1);end else if(de<31)then cr[cv]={[132]=12,[145]=10,[54]=de- -7,[131]=0,[172]=12};cv=(cv-1);else cp[cy]=ct[h]end end end end end end else if not(dd[54]<48)then if not(de<56)then do if not(de<60)then if not(de<62)then if(de>62)then if((cp[dd[132]]<cp[cz]))then cv=h;end;else local b,o,t,v do v=cy end o,t=bt(cp[v](ca(cp,(v+1),h)))da=(t+v-1)b=0 for t=v,da do b=(b+1);cp[t]=o[b];end;end else if 60==dd[54]then cp[cy]={};else do cp[cy]=m[h];end end end else if not(de<58)then if(dd[54]<59)then cp[cy]=(cp[h]*ct[cz]);else cp[cy]=cc(cs[h],nil,r);end else if not(dd[54]~=56)then do cr[cv]={[132]=8,[54]=dd[54]-48,[172]=21,[145]=0,[131]=0};end do cv=(cv-1);end else cp[cy][cp[h]]=cp[dd[145]];end end end end else if not(de<52)then if not(dd[54]<54)then if w==de then cp[cy]=nil;else if(not(cp[cy]==ct[cz]))then do cv=dd[172];end end;end else if(de<53)then local b,m,o do b=cy end do m=cp[b]end o=cp[(b+2)]if((o>0))then if((m>cp[b+1]))then cv=h;else cp[(b+3)]=m;end elseif((m<cp[b+1]))then do cv=h;end else cp[(b+d)]=m;end else do cr[cv]={[54]=de-20,[132]=30,[145]=2,[172]=34,[131]=0};end cv=(cv-1);end end else if not(de>49)then if(dd[54]<49)then do do return cp[cy]end end else cp[cy]=(cp[h]/cp[cz]);end else if(de>50)then local b,d,m m=cy d=cp[(m+2)]do b=(cp[m]+d)end cp[m]=b;if((d>0))then if(not(b>cp[m+1]))then cv=h;cp[(m+3)]=b;end elseif(not(b<cp[m+1]))then cv=h;cp[(m+3)]=b;end else cr[cv]={[131]=0,[132]=12,[54]=de-34,[172]=2,[145]=2};do cv=(cv-1);end end end end end else do if not(de>39)then do if not(de<36)then if not(de>37)then if(de<37)then cr[cv]={[145]=9,[172]=33,[132]=8,[i]=de- -6,[131]=0};do cv=(cv-1);end else cp[cy]=cp[h][ct[dd[145]]];end else if not(de~=38)then cr[cv]={[131]=q,[172]=24,[145]=0,[54]=de-30,[132]=27};do cv=(cv-1);end else cr[cv]={[131]=0,[54]=de-6,[172]=31,[145]=2,[132]=29};do cv=(cv-1);end end end else if not(dd[54]>33)then if(de<33)then local b b=cy cp[b](cp[(b+1)])else local b do b=cy end cp[b]=cp[b](ca(cp,b+1,h));end else if not(de~=34)then do cr[cv]={[172]=2,[132]=37,[145]=2,[54]=de-18,[c]=0};end cv=(cv-1);else do cp[cy]=(cp[h]+ct[cz]);end end end end end else do if not(de<44)then do if not(de>45)then if(de<45)then cr[cv]={[132]=10,[131]=0,[145]=0,[172]=41,[54]=de-36};cv=(cv-1);else local b,c c=cy b={}while#cw>0 do for d=1,#cw do local d=cw[d]for i=0,#d do local d=d[i]local i=d[1]local m=d[2]if i==cp and m>=0 then b[m]=i[m]d[1]=b end end end break end return ca(cp,c,da);end else if(de<47)then do cr[cv]={[132]=12,[131]=0,[145]=54,[54]=de-15,[172]=42};end cv=(cv-1);else local b,c b=dd[132]c=cp[h]cp[(b+1)]=c;do cp[b]=c[ct[cz]];end end end end else do if not(de<42)then if(de<43)then cp[cy][ct[h]]=cp[cz];else do cr[cv]={[54]=de-10,[131]=0,[132]=8,[145]=2,[172]=12};end cv=(cv-1);end else do if(de<41)then cv=((ct[cy]<cp[cz])and h or cv)else local b b={}if(#cw>0)then for c=1,#cw do local d d=cw[c]for c=0,#d do local h,i,m do m=d[c]end h=m[1]i=m[2]if(h==cp and i>=0)then do b[i]=h[i]end m[1]=b end end end end do return dd[cz],dd[cy],cp[dd[132]];end end end end end end end end end end end do cv=(cv+1);end end;end;end bb=1463 else if bb>1471 then ba=76;else bb=1480 return cc(bv(bd()),{},bd())();end end end else if bb<=1178 then if bb>1157 then bb=1224 do ck=function()local b,c,d,h,i,m,o,q=85,61,57,40,49,41,95,70,94,73,60,59,99,48,49,99,60,56,30,56 while b~=45 do if c>=241 then if c<=326 then if c<=241 then c=290 m=cj(20,d,11)else if c>296 then c=351 do h=1 end else c=326 o=(cj(0,d,20)*4294967296+i)end end else if c<=351 then do if not(m~=0)then if not(o==0)then m=1 h=0 else do return(q*0)end end elseif 2047~=m then else do if not(o~=0)then do return(q*(0/0))end else return(q*(1/0))end end end end c=394 else if c>400 then b=45;else c=426 return(q*(2^(m-1023))*(o/bx+h))end end end else if c>=127 then if c<=127 then do d=co()end c=167 else if c<201 then while((i==0 and d==0))do return 0 end c=203 else do q=((-1)^cj(31,d,1))end c=241 end end else if c>70 then i=co()c=127 else c=105 d,h,i,m,o,q=nil end end end end end end else bi=function()local b,c c,b=cf(cb,ce,(ce+2))ce=(ce+2);return((b*256)+c);end bb=1178 end else if bb>=1245 then if bb<1268 then bb=1277 do bt=function(...)return{...},bj('#',...)end end else do br={}end bb=1316 end else bo=function(b,b,b)local b,c,d,h=79,54,64,23,40,19,13,46,34,17,15,92,22 while b~=33 do if c<=105 then if c<=54 then c=78 d,h=nil else if c>84 then c=148 h=cb:sub(ce,(ce+d-1))else d=co()c=105 end end else if c>=183 then if c>189 then break else c=222 return h;end else ce=(ce+d);c=183 end end end end bb=1245 end end end else if bb<=896 then if bb>=812 then if bb>=861 then if bb>864 then for b=j,31 do do bf[b]=bq end bq=(bq*2)end bb=942 else bb=896 bq=2 end else bb=861 bf={[0]=1}end else if bb>765 then bx=(2^52)bb=812 else bb=794 cd=''end end else if bb>=1038 then if bb<=1038 then ce=1 bb=1066 else if bb<1102 then do co=function()local b,c,d,h h,d,c,b=cf(cb,ce,(ce+3))do ce=(ce+4);end return((b*16777216)+(c*65536)+(d*256)+h);end end bb=1107 else bb=1149 do ch=function()local b do b=cf(cb,ce,ce)end do ce=(ce+1);end return b;end end end end else if bb<=942 then bb=965 cj=function(b,c,d,h,h,h)local h,i,j=50,50,51,38,84,96,46,21,59,51,74,80 while h~=29 do if i<=128 then if i>=79 then if i>82 then do j=((c/bf[b])%bf[d])end i=144 else i=128 j=nil end else j=nil i=79 end else if i>=191 then if i<221 then i=227 return j else h=29;end else i=191 j=(j-j%1)end end end end else if bb<989 then bb=994 cl=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local d,h=0,1 while b>0 and c>0 do local i,j=b%16,c%16 d=d+bm[i+1][j+1]*h b=(b-i)/16 c=(c-j)/16 h=h*a end d=d+b*h+c*h return d end)else do bh=function(a,b,c,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%1);end end bb=1038 end end end end end else if bb>=409 then if bb>=555 then if bb<=588 then if bb>=572 then if bb<580 then bg=tonumber bb=588 else bc={}bb=631 end else ca=(unpack or table.unpack)bb=572 end else if bb<=631 then for a=0,255 do bc[a]=be(a);end bb=675 else if bb<705 then bb=713 cb=bn(n,'..',function(a,b,b)return bc[bg(a,16)]end)else bm={{0,1,2,p,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,s,5,4,7,6,9,8,11,10,13,12,15,14,},{y,l,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{f,2,1,0,7,6,5,4,11,10,9,8,15,14,e,12,},{4,5,6,7,0,1,2,3,12,13,g,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,k,3,0,1,14,15,12,13,10,11,u,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,x,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}bb=756 end end end else if bb<=439 then if bb<430 then bj=select bb=439 else bb=474 cm=type end else if bb>=496 then if bb>500 then bb=555 do by=math.floor end else ci=math.abs bb=518 end else cg=(function(a,b,b,b,b)if not(cm(a)~='number')then return true else return false end end)bb=496 end end end else if bb<=227 then if bb<=124 then if bb>114 then cf=string.byte bb=148 else bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co=nil bb=124 end else if bb>=187 then if bb>189 then bb=265 bn=string.gsub else do bz=string.sub end bb=227 end else be=string.char bb=187 end end else if bb>=340 then if bb<=340 then do bu=math.ldexp end bb=369 else if bb<381 then bd=(getfenv or function()return _ENV end)bb=384 else bb=409 bp=setmetatable end end else if bb<=265 then bb=296 do bw=string.rep end else if bb<306 then do bk=table.concat end bb=312 else bb=340 bl=table.insert end end end end end end end end
